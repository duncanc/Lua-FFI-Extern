return {
  basicTypes = {
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLvoid = "void";
    GLbyte = "signed char";
    GLshort = "short";
    GLint = "int";
    GLfloat = "float";
    GLdouble = "double";
    GLubyte = "unsigned char";
    GLushort = "unsigned short";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLboolean = "unsigned char";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLvoid = "void";
  };
  typeAliases = {
    UInt32 = "GLuint";
    VertexShaderOpEXT = "GLenum";
    VertexShaderCoordOutEXT = "GLenum";
    VertexShaderWriteMaskEXT = "GLenum";
    DataTypeEXT = "GLenum";
    VertexShaderStorageTypeEXT = "GLenum";
    ParameterRangeEXT = "GLenum";
    ScalarType = "GLenum";
    Void = "GLvoid";
    Int8 = "GLbyte";
    Int16 = "GLshort";
    Int32 = "GLint";
    Float32 = "GLfloat";
    Float64 = "GLdouble";
    UInt8 = "GLubyte";
    UInt16 = "GLushort";
    LightName = "GLenum";
    LightParameter = "GLenum";
    MaterialFace = "GLenum";
    MaterialParameter = "GLenum";
    TextureUnit = "GLenum";
    TextureCoordName = "GLenum";
    TextureGenParameter = "GLenum";
    VertexShaderTextureUnitParameter = "GLenum";
    VertexShaderParameterEXT = "GLenum";
    Boolean = "GLboolean";
    VariantCapEXT = "GLenum";
    GetVariantValueEXT = "GLenum";
    VoidPointer = "GLvoid*";
  };
  magicNumbers = {
    VERTEX_SHADER_EXT = 0x8780;
    VERTEX_SHADER_BINDING_EXT = 0x8781;
    OP_INDEX_EXT = 0x8782;
    OP_NEGATE_EXT = 0x8783;
    OP_DOT3_EXT = 0x8784;
    OP_DOT4_EXT = 0x8785;
    OP_MUL_EXT = 0x8786;
    OP_ADD_EXT = 0x8787;
    OP_MADD_EXT = 0x8788;
    OP_FRAC_EXT = 0x8789;
    OP_MAX_EXT = 0x878A;
    OP_MIN_EXT = 0x878B;
    OP_SET_GE_EXT = 0x878C;
    OP_SET_LT_EXT = 0x878D;
    OP_CLAMP_EXT = 0x878E;
    OP_FLOOR_EXT = 0x878F;
    OP_ROUND_EXT = 0x8790;
    OP_EXP_BASE_2_EXT = 0x8791;
    OP_LOG_BASE_2_EXT = 0x8792;
    OP_POWER_EXT = 0x8793;
    OP_RECIP_EXT = 0x8794;
    OP_RECIP_SQRT_EXT = 0x8795;
    OP_SUB_EXT = 0x8796;
    OP_CROSS_PRODUCT_EXT = 0x8797;
    OP_MULTIPLY_MATRIX_EXT = 0x8798;
    OP_MOV_EXT = 0x8799;
    OUTPUT_VERTEX_EXT = 0x879A;
    OUTPUT_COLOR0_EXT = 0x879B;
    OUTPUT_COLOR1_EXT = 0x879C;
    OUTPUT_TEXTURE_COORD0_EXT = 0x879D;
    OUTPUT_TEXTURE_COORD1_EXT = 0x879E;
    OUTPUT_TEXTURE_COORD2_EXT = 0x879F;
    OUTPUT_TEXTURE_COORD3_EXT = 0x87A0;
    OUTPUT_TEXTURE_COORD4_EXT = 0x87A1;
    OUTPUT_TEXTURE_COORD5_EXT = 0x87A2;
    OUTPUT_TEXTURE_COORD6_EXT = 0x87A3;
    OUTPUT_TEXTURE_COORD7_EXT = 0x87A4;
    OUTPUT_TEXTURE_COORD8_EXT = 0x87A5;
    OUTPUT_TEXTURE_COORD9_EXT = 0x87A6;
    OUTPUT_TEXTURE_COORD10_EXT = 0x87A7;
    OUTPUT_TEXTURE_COORD11_EXT = 0x87A8;
    OUTPUT_TEXTURE_COORD12_EXT = 0x87A9;
    OUTPUT_TEXTURE_COORD13_EXT = 0x87AA;
    OUTPUT_TEXTURE_COORD14_EXT = 0x87AB;
    OUTPUT_TEXTURE_COORD15_EXT = 0x87AC;
    OUTPUT_TEXTURE_COORD16_EXT = 0x87AD;
    OUTPUT_TEXTURE_COORD17_EXT = 0x87AE;
    OUTPUT_TEXTURE_COORD18_EXT = 0x87AF;
    OUTPUT_TEXTURE_COORD19_EXT = 0x87B0;
    OUTPUT_TEXTURE_COORD20_EXT = 0x87B1;
    OUTPUT_TEXTURE_COORD21_EXT = 0x87B2;
    OUTPUT_TEXTURE_COORD22_EXT = 0x87B3;
    OUTPUT_TEXTURE_COORD23_EXT = 0x87B4;
    OUTPUT_TEXTURE_COORD24_EXT = 0x87B5;
    OUTPUT_TEXTURE_COORD25_EXT = 0x87B6;
    OUTPUT_TEXTURE_COORD26_EXT = 0x87B7;
    OUTPUT_TEXTURE_COORD27_EXT = 0x87B8;
    OUTPUT_TEXTURE_COORD28_EXT = 0x87B9;
    OUTPUT_TEXTURE_COORD29_EXT = 0x87BA;
    OUTPUT_TEXTURE_COORD30_EXT = 0x87BB;
    OUTPUT_TEXTURE_COORD31_EXT = 0x87BC;
    OUTPUT_FOG_EXT = 0x87BD;
    SCALAR_EXT = 0x87BE;
    VECTOR_EXT = 0x87BF;
    MATRIX_EXT = 0x87C0;
    VARIANT_EXT = 0x87C1;
    INVARIANT_EXT = 0x87C2;
    LOCAL_CONSTANT_EXT = 0x87C3;
    LOCAL_EXT = 0x87C4;
    MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5;
    MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6;
    MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7;
    MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8;
    MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9;
    MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA;
    MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB;
    MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC;
    MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD;
    MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE;
    VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF;
    VERTEX_SHADER_VARIANTS_EXT = 0x87D0;
    VERTEX_SHADER_INVARIANTS_EXT = 0x87D1;
    VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2;
    VERTEX_SHADER_LOCALS_EXT = 0x87D3;
    VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4;
    X_EXT = 0x87D5;
    Y_EXT = 0x87D6;
    Z_EXT = 0x87D7;
    W_EXT = 0x87D8;
    NEGATIVE_X_EXT = 0x87D9;
    NEGATIVE_Y_EXT = 0x87DA;
    NEGATIVE_Z_EXT = 0x87DB;
    NEGATIVE_W_EXT = 0x87DC;
    ZERO_EXT = 0x87DD;
    ONE_EXT = 0x87DE;
    NEGATIVE_ONE_EXT = 0x87DF;
    NORMALIZED_RANGE_EXT = 0x87E0;
    FULL_RANGE_EXT = 0x87E1;
    CURRENT_VERTEX_EXT = 0x87E2;
    MVP_MATRIX_EXT = 0x87E3;
    VARIANT_VALUE_EXT = 0x87E4;
    VARIANT_DATATYPE_EXT = 0x87E5;
    VARIANT_ARRAY_STRIDE_EXT = 0x87E6;
    VARIANT_ARRAY_TYPE_EXT = 0x87E7;
    VARIANT_ARRAY_EXT = 0x87E8;
    VARIANT_ARRAY_POINTER_EXT = 0x87E9;
    INVARIANT_VALUE_EXT = 0x87EA;
    INVARIANT_DATATYPE_EXT = 0x87EB;
    LOCAL_CONSTANT_VALUE_EXT = 0x87EC;
    LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED;
  };
  funcs = {
    {'BeginVertexShaderEXT'};
    {'EndVertexShaderEXT'};
    {'BindVertexShaderEXT';
      'UInt32', 'id'};
    {'GenVertexShadersEXT', ret='UInt32';
      'UInt32', 'range'};
    {'DeleteVertexShaderEXT';
      'UInt32', 'id'};
    {'ShaderOp1EXT';
      'VertexShaderOpEXT', 'op';
      'UInt32', 'res';
      'UInt32', 'arg1'};
    {'ShaderOp2EXT';
      'VertexShaderOpEXT', 'op';
      'UInt32', 'res';
      'UInt32', 'arg1';
      'UInt32', 'arg2'};
    {'ShaderOp3EXT';
      'VertexShaderOpEXT', 'op';
      'UInt32', 'res';
      'UInt32', 'arg1';
      'UInt32', 'arg2';
      'UInt32', 'arg3'};
    {'SwizzleEXT';
      'UInt32', 'res';
      'UInt32', 'in';
      'VertexShaderCoordOutEXT', 'outX';
      'VertexShaderCoordOutEXT', 'outY';
      'VertexShaderCoordOutEXT', 'outZ';
      'VertexShaderCoordOutEXT', 'outW'};
    {'WriteMaskEXT';
      'UInt32', 'res';
      'UInt32', 'in';
      'VertexShaderWriteMaskEXT', 'outX';
      'VertexShaderWriteMaskEXT', 'outY';
      'VertexShaderWriteMaskEXT', 'outZ';
      'VertexShaderWriteMaskEXT', 'outW'};
    {'InsertComponentEXT';
      'UInt32', 'res';
      'UInt32', 'src';
      'UInt32', 'num'};
    {'ExtractComponentEXT';
      'UInt32', 'res';
      'UInt32', 'src';
      'UInt32', 'num'};
    {'GenSymbolsEXT', ret='UInt32';
      'DataTypeEXT', 'datatype';
      'VertexShaderStorageTypeEXT', 'storagetype';
      'ParameterRangeEXT', 'range';
      'UInt32', 'components'};
    {'SetInvariantEXT';
      'UInt32', 'id';
      'ScalarType', 'type';
      'const Void*', 'addr'};
    {'SetLocalConstantEXT';
      'UInt32', 'id';
      'ScalarType', 'type';
      'const Void*', 'addr'};
    {'VariantbvEXT';
      'UInt32', 'id';
      'const Int8*', 'addr'};
    {'VariantsvEXT';
      'UInt32', 'id';
      'const Int16*', 'addr'};
    {'VariantivEXT';
      'UInt32', 'id';
      'const Int32*', 'addr'};
    {'VariantfvEXT';
      'UInt32', 'id';
      'const Float32*', 'addr'};
    {'VariantdvEXT';
      'UInt32', 'id';
      'const Float64*', 'addr'};
    {'VariantubvEXT';
      'UInt32', 'id';
      'const UInt8*', 'addr'};
    {'VariantusvEXT';
      'UInt32', 'id';
      'const UInt16*', 'addr'};
    {'VariantuivEXT';
      'UInt32', 'id';
      'const UInt32*', 'addr'};
    {'VariantPointerEXT';
      'UInt32', 'id';
      'ScalarType', 'type';
      'UInt32', 'stride';
      'const Void*', 'addr'};
    {'EnableVariantClientStateEXT';
      'UInt32', 'id'};
    {'DisableVariantClientStateEXT';
      'UInt32', 'id'};
    {'BindLightParameterEXT', ret='UInt32';
      'LightName', 'light';
      'LightParameter', 'value'};
    {'BindMaterialParameterEXT', ret='UInt32';
      'MaterialFace', 'face';
      'MaterialParameter', 'value'};
    {'BindTexGenParameterEXT', ret='UInt32';
      'TextureUnit', 'unit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'value'};
    {'BindTextureUnitParameterEXT', ret='UInt32';
      'TextureUnit', 'unit';
      'VertexShaderTextureUnitParameter', 'value'};
    {'BindParameterEXT', ret='UInt32';
      'VertexShaderParameterEXT', 'value'};
    {'IsVariantEnabledEXT', ret='Boolean';
      'UInt32', 'id';
      'VariantCapEXT', 'cap'};
    {'GetVariantBooleanvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Boolean*', 'data'};
    {'GetVariantIntegervEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Int32*', 'data'};
    {'GetVariantFloatvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Float32*', 'data'};
    {'GetVariantPointervEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'VoidPointer*', 'data'};
    {'GetInvariantBooleanvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Boolean*', 'data'};
    {'GetInvariantIntegervEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Int32*', 'data'};
    {'GetInvariantFloatvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Float32*', 'data'};
    {'GetLocalConstantBooleanvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Boolean*', 'data'};
    {'GetLocalConstantIntegervEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Int32*', 'data'};
    {'GetLocalConstantFloatvEXT';
      'UInt32', 'id';
      'GetVariantValueEXT', 'value';
      'Float32*', 'data'};
  };
}
