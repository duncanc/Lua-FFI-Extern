return {
  basicTypes = {
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLboolean = "unsigned char";
    GLdouble = "double";
    GLint = "int";
    GLint = "int";
    GLfloat = "float";
  };
  typeAliases = {
    UInt32 = "GLuint";
    Boolean = "GLboolean";
    CoordD = "GLdouble";
    Int32 = "GLint";
    CheckedInt32 = "GLint";
    CoordF = "GLfloat";
  };
  magicNumbers = {
    VERTEX_ATTRIB_MAP1_APPLE = 0x8A00;
    VERTEX_ATTRIB_MAP2_APPLE = 0x8A01;
    VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02;
    VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03;
    VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04;
    VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05;
    VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06;
    VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07;
    VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08;
    VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09;
  };
  funcs = {
    {'EnableVertexAttribAPPLE';
      'UInt32', 'index';
      'GLenum', 'pname'};
    {'DisableVertexAttribAPPLE';
      'UInt32', 'index';
      'GLenum', 'pname'};
    {'IsVertexAttribEnabledAPPLE', ret='Boolean';
      'UInt32', 'index';
      'GLenum', 'pname'};
    {'MapVertexAttrib1dAPPLE';
      'UInt32', 'index';
      'UInt32', 'size';
      'CoordD', 'u1';
      'CoordD', 'u2';
      'Int32', 'stride';
      'CheckedInt32', 'order';
      'const CoordD*', 'points'};
    {'MapVertexAttrib1fAPPLE';
      'UInt32', 'index';
      'UInt32', 'size';
      'CoordF', 'u1';
      'CoordF', 'u2';
      'Int32', 'stride';
      'CheckedInt32', 'order';
      'const CoordF*', 'points'};
    {'MapVertexAttrib2dAPPLE';
      'UInt32', 'index';
      'UInt32', 'size';
      'CoordD', 'u1';
      'CoordD', 'u2';
      'Int32', 'ustride';
      'CheckedInt32', 'uorder';
      'CoordD', 'v1';
      'CoordD', 'v2';
      'Int32', 'vstride';
      'CheckedInt32', 'vorder';
      'const CoordD*', 'points'};
    {'MapVertexAttrib2fAPPLE';
      'UInt32', 'index';
      'UInt32', 'size';
      'CoordF', 'u1';
      'CoordF', 'u2';
      'Int32', 'ustride';
      'CheckedInt32', 'uorder';
      'CoordF', 'v1';
      'CoordF', 'v2';
      'Int32', 'vstride';
      'CheckedInt32', 'vorder';
      'const CoordF*', 'points'};
  };
}
