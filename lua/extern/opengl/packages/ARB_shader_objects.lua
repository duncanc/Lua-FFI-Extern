return {
  basicTypes = {
    GLhandleARB = "unsigned int";
    GLenum = "unsigned int";
    GLsizei = "int";
    GLcharARB = "char";
    GLint = "int";
    GLfloat = "float";
    GLboolean = "unsigned char";
    GLcharARB = "char";
    GLuint = "unsigned int";
  };
  typeAliases = {
    handleARB = "GLhandleARB";
    SizeI = "GLsizei";
    charPointerARB = "GLcharARB*";
    Int32 = "GLint";
    Float32 = "GLfloat";
    Boolean = "GLboolean";
    charARB = "GLcharARB";
    UInt32 = "GLuint";
  };
  magicNumbers = {
    PROGRAM_OBJECT_ARB = 0x8B40;
    SHADER_OBJECT_ARB = 0x8B48;
    OBJECT_TYPE_ARB = 0x8B4E;
    OBJECT_SUBTYPE_ARB = 0x8B4F;
    FLOAT_VEC2_ARB = 0x8B50;
    FLOAT_VEC3_ARB = 0x8B51;
    FLOAT_VEC4_ARB = 0x8B52;
    INT_VEC2_ARB = 0x8B53;
    INT_VEC3_ARB = 0x8B54;
    INT_VEC4_ARB = 0x8B55;
    BOOL_ARB = 0x8B56;
    BOOL_VEC2_ARB = 0x8B57;
    BOOL_VEC3_ARB = 0x8B58;
    BOOL_VEC4_ARB = 0x8B59;
    FLOAT_MAT2_ARB = 0x8B5A;
    FLOAT_MAT3_ARB = 0x8B5B;
    FLOAT_MAT4_ARB = 0x8B5C;
    SAMPLER_1D_ARB = 0x8B5D;
    SAMPLER_2D_ARB = 0x8B5E;
    SAMPLER_3D_ARB = 0x8B5F;
    SAMPLER_CUBE_ARB = 0x8B60;
    SAMPLER_1D_SHADOW_ARB = 0x8B61;
    SAMPLER_2D_SHADOW_ARB = 0x8B62;
    SAMPLER_2D_RECT_ARB = 0x8B63;
    SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64;
    OBJECT_DELETE_STATUS_ARB = 0x8B80;
    OBJECT_COMPILE_STATUS_ARB = 0x8B81;
    OBJECT_LINK_STATUS_ARB = 0x8B82;
    OBJECT_VALIDATE_STATUS_ARB = 0x8B83;
    OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84;
    OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85;
    OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86;
    OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87;
    OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88;
  };
  funcs = {
    {'DeleteObjectARB';
      'handleARB', 'obj'};
    {'GetHandleARB', ret='handleARB';
      'GLenum', 'pname'};
    {'DetachObjectARB';
      'handleARB', 'containerObj';
      'handleARB', 'attachedObj'};
    {'CreateShaderObjectARB', ret='handleARB';
      'GLenum', 'shaderType'};
    {'ShaderSourceARB';
      'handleARB', 'shaderObj';
      'SizeI', 'count';
      'const charPointerARB*', 'string';
      'const Int32*', 'length'};
    {'CompileShaderARB';
      'handleARB', 'shaderObj'};
    {'CreateProgramObjectARB', ret='handleARB'};
    {'AttachObjectARB';
      'handleARB', 'containerObj';
      'handleARB', 'obj'};
    {'LinkProgramARB';
      'handleARB', 'programObj'};
    {'UseProgramObjectARB';
      'handleARB', 'programObj'};
    {'ValidateProgramARB';
      'handleARB', 'programObj'};
    {'Uniform1fARB';
      'Int32', 'location';
      'Float32', 'v0'};
    {'Uniform2fARB';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1'};
    {'Uniform3fARB';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2'};
    {'Uniform4fARB';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2';
      'Float32', 'v3'};
    {'Uniform1iARB';
      'Int32', 'location';
      'Int32', 'v0'};
    {'Uniform2iARB';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1'};
    {'Uniform3iARB';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2'};
    {'Uniform4iARB';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2';
      'Int32', 'v3'};
    {'Uniform1fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform2fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform3fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform4fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform1ivARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform2ivARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform3ivARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform4ivARB';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'UniformMatrix2fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'UniformMatrix3fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'UniformMatrix4fvARB';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'GetObjectParameterfvARB';
      'handleARB', 'obj';
      'GLenum', 'pname';
      'Float32*', 'params'};
    {'GetObjectParameterivARB';
      'handleARB', 'obj';
      'GLenum', 'pname';
      'Int32*', 'params'};
    {'GetInfoLogARB';
      'handleARB', 'obj';
      'SizeI', 'maxLength';
      'SizeI*', 'length';
      'charARB*', 'infoLog'};
    {'GetAttachedObjectsARB';
      'handleARB', 'containerObj';
      'SizeI', 'maxCount';
      'SizeI*', 'count';
      'handleARB*', 'obj'};
    {'GetUniformLocationARB', ret='Int32';
      'handleARB', 'programObj';
      'const charARB*', 'name'};
    {'GetActiveUniformARB';
      'handleARB', 'programObj';
      'UInt32', 'index';
      'SizeI', 'maxLength';
      'SizeI*', 'length';
      'Int32*', 'size';
      'GLenum*', 'type';
      'charARB*', 'name'};
    {'GetUniformfvARB';
      'handleARB', 'programObj';
      'Int32', 'location';
      'Float32*', 'params'};
    {'GetUniformivARB';
      'handleARB', 'programObj';
      'Int32', 'location';
      'Int32*', 'params'};
    {'GetShaderSourceARB';
      'handleARB', 'obj';
      'SizeI', 'maxLength';
      'SizeI*', 'length';
      'charARB*', 'source'};
  };
}
