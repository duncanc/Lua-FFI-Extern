return {
  basicTypes = {
    GLbitfield = "unsigned int";
    GLenum = "unsigned int";
    GLfloat = "float";
    GLdouble = "double";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLfloat = "float";
    GLint = "int";
    GLenum = "unsigned int";
    GLsizei = "int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLvoid = "void";
    GLint = "int";
    GLenum = "unsigned int";
    GLint = "int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLvoid = "void";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLboolean = "unsigned char";
    GLsizeiptr = "ptrdiff_t";
    GLenum = "unsigned int";
    GLintptr = "ptrdiff_t";
    GLenum = "unsigned int";
    GLbitfield = "unsigned int";
    GLenum = "unsigned int";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
  };
  typeAliases = {
    ClientAttribMask = "GLbitfield";
    MatrixMode = "GLenum";
    Float32 = "GLfloat";
    Float64 = "GLdouble";
    Texture = "GLuint";
    TextureTarget = "GLenum";
    TextureParameterName = "GLenum";
    CheckedFloat32 = "GLfloat";
    CheckedInt32 = "GLint";
    TextureInternalFormat = "GLenum";
    SizeI = "GLsizei";
    PixelFormat = "GLenum";
    PixelType = "GLenum";
    Void = "GLvoid";
    WinCoord = "GLint";
    GetTextureParameter = "GLenum";
    Int32 = "GLint";
    TextureUnit = "GLenum";
    EnableCap = "GLenum";
    UInt32 = "GLuint";
    TexCoordPointerType = "GLenum";
    TextureEnvTarget = "GLenum";
    TextureEnvParameter = "GLenum";
    TextureCoordName = "GLenum";
    TextureGenParameter = "GLenum";
    TypeEnum = "GLenum";
    VoidPointer = "GLvoid*";
    ProgramTarget = "GLenum";
    ProgramFormat = "GLenum";
    ProgramProperty = "GLenum";
    ProgramStringProperty = "GLenum";
    Boolean = "GLboolean";
    Sizeiptr = "GLsizeiptr";
    VertexBufferObjectUsage = "GLenum";
    Intptr = "GLintptr";
    VertexBufferObjectAccess = "GLenum";
    BufferAccessMask = "GLbitfield";
    VertexBufferObjectParameter = "GLenum";
    Renderbuffer = "GLuint";
    PixelInternalFormat = "GLenum";
    RenderbufferParameterName = "GLenum";
    FramebufferStatus = "GLenum";
    Framebuffer = "GLuint";
    FramebufferTarget = "GLenum";
    FramebufferAttachment = "GLenum";
    RenderbufferTarget = "GLenum";
    FramebufferAttachmentParameterName = "GLenum";
    DrawBufferMode = "GLenum";
    ReadBufferMode = "GLenum";
    GetFramebufferParameter = "GLenum";
  };
  magicNumbers = {
    PROGRAM_MATRIX_EXT = 0x8E2D;
    TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E;
    PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F;
  };
  funcs = {
    {'ClientAttribDefaultEXT';
      'ClientAttribMask', 'mask'};
    {'PushClientAttribDefaultEXT';
      'ClientAttribMask', 'mask'};
    {'MatrixLoadfEXT';
      'MatrixMode', 'mode';
      'const Float32*', 'm'};
    {'MatrixLoaddEXT';
      'MatrixMode', 'mode';
      'const Float64*', 'm'};
    {'MatrixMultfEXT';
      'MatrixMode', 'mode';
      'const Float32*', 'm'};
    {'MatrixMultdEXT';
      'MatrixMode', 'mode';
      'const Float64*', 'm'};
    {'MatrixLoadIdentityEXT';
      'MatrixMode', 'mode'};
    {'MatrixRotatefEXT';
      'MatrixMode', 'mode';
      'Float32', 'angle';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z'};
    {'MatrixRotatedEXT';
      'MatrixMode', 'mode';
      'Float64', 'angle';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'MatrixScalefEXT';
      'MatrixMode', 'mode';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z'};
    {'MatrixScaledEXT';
      'MatrixMode', 'mode';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'MatrixTranslatefEXT';
      'MatrixMode', 'mode';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z'};
    {'MatrixTranslatedEXT';
      'MatrixMode', 'mode';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'MatrixFrustumEXT';
      'MatrixMode', 'mode';
      'Float64', 'left';
      'Float64', 'right';
      'Float64', 'bottom';
      'Float64', 'top';
      'Float64', 'zNear';
      'Float64', 'zFar'};
    {'MatrixOrthoEXT';
      'MatrixMode', 'mode';
      'Float64', 'left';
      'Float64', 'right';
      'Float64', 'bottom';
      'Float64', 'top';
      'Float64', 'zNear';
      'Float64', 'zFar'};
    {'MatrixPopEXT';
      'MatrixMode', 'mode'};
    {'MatrixPushEXT';
      'MatrixMode', 'mode'};
    {'MatrixLoadTransposefEXT';
      'MatrixMode', 'mode';
      'const Float32*', 'm'};
    {'MatrixLoadTransposedEXT';
      'MatrixMode', 'mode';
      'const Float64*', 'm'};
    {'MatrixMultTransposefEXT';
      'MatrixMode', 'mode';
      'const Float32*', 'm'};
    {'MatrixMultTransposedEXT';
      'MatrixMode', 'mode';
      'const Float64*', 'm'};
    {'TextureParameterfEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'CheckedFloat32', 'param'};
    {'TextureParameterfvEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedFloat32*', 'params'};
    {'TextureParameteriEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'CheckedInt32', 'param'};
    {'TextureParameterivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedInt32*', 'params'};
    {'TextureImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'TextureImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'TextureSubImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'SizeI', 'width';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'TextureSubImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'CopyTextureImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'CheckedInt32', 'border'};
    {'CopyTextureImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border'};
    {'CopyTextureSubImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width'};
    {'CopyTextureSubImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'GetTextureImageEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'Void*', 'pixels'};
    {'GetTextureParameterfvEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Float32*', 'params'};
    {'GetTextureParameterivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'GetTextureLevelParameterfvEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'GetTextureParameter', 'pname';
      'Float32*', 'params'};
    {'GetTextureLevelParameterivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'TextureImage3DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'TextureSubImage3DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'CopyTextureSubImage3DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'MultiTexParameterfEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'CheckedFloat32', 'param'};
    {'MultiTexParameterfvEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedFloat32*', 'params'};
    {'MultiTexParameteriEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'CheckedInt32', 'param'};
    {'MultiTexParameterivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedInt32*', 'params'};
    {'MultiTexImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'MultiTexImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'MultiTexSubImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'SizeI', 'width';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'MultiTexSubImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'CopyMultiTexImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'CheckedInt32', 'border'};
    {'CopyMultiTexImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border'};
    {'CopyMultiTexSubImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width'};
    {'CopyMultiTexSubImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'GetMultiTexImageEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'Void*', 'pixels'};
    {'GetMultiTexParameterfvEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Float32*', 'params'};
    {'GetMultiTexParameterivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'GetMultiTexLevelParameterfvEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'GetTextureParameter', 'pname';
      'Float32*', 'params'};
    {'GetMultiTexLevelParameterivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'MultiTexImage3DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'CheckedInt32', 'border';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'MultiTexSubImage3DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'PixelFormat', 'format';
      'PixelType', 'type';
      'const Void*', 'pixels'};
    {'CopyMultiTexSubImage3DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'WinCoord', 'x';
      'WinCoord', 'y';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'BindMultiTextureEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'Texture', 'texture'};
    {'EnableClientStateIndexedEXT';
      'EnableCap', 'array';
      'UInt32', 'index'};
    {'DisableClientStateIndexedEXT';
      'EnableCap', 'array';
      'UInt32', 'index'};
    {'MultiTexCoordPointerEXT';
      'TextureUnit', 'texunit';
      'Int32', 'size';
      'TexCoordPointerType', 'type';
      'SizeI', 'stride';
      'const Void*', 'pointer'};
    {'MultiTexEnvfEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'CheckedFloat32', 'param'};
    {'MultiTexEnvfvEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'const CheckedFloat32*', 'params'};
    {'MultiTexEnviEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'CheckedInt32', 'param'};
    {'MultiTexEnvivEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'const CheckedInt32*', 'params'};
    {'MultiTexGendEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'Float64', 'param'};
    {'MultiTexGendvEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'const Float64*', 'params'};
    {'MultiTexGenfEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'CheckedFloat32', 'param'};
    {'MultiTexGenfvEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'const CheckedFloat32*', 'params'};
    {'MultiTexGeniEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'CheckedInt32', 'param'};
    {'MultiTexGenivEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'const CheckedInt32*', 'params'};
    {'GetMultiTexEnvfvEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'Float32*', 'params'};
    {'GetMultiTexEnvivEXT';
      'TextureUnit', 'texunit';
      'TextureEnvTarget', 'target';
      'TextureEnvParameter', 'pname';
      'Int32*', 'params'};
    {'GetMultiTexGendvEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'Float64*', 'params'};
    {'GetMultiTexGenfvEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'Float32*', 'params'};
    {'GetMultiTexGenivEXT';
      'TextureUnit', 'texunit';
      'TextureCoordName', 'coord';
      'TextureGenParameter', 'pname';
      'Int32*', 'params'};
    {'GetFloatIndexedvEXT';
      'TypeEnum', 'target';
      'UInt32', 'index';
      'Float32*', 'data'};
    {'GetDoubleIndexedvEXT';
      'TypeEnum', 'target';
      'UInt32', 'index';
      'Float64*', 'data'};
    {'GetPointerIndexedvEXT';
      'TypeEnum', 'target';
      'UInt32', 'index';
      'VoidPointer*', 'data'};
    {'CompressedTextureImage3DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedTextureImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedTextureImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedTextureSubImage3DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedTextureSubImage2DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedTextureSubImage1DEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'SizeI', 'width';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'GetCompressedTextureImageEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'CheckedInt32', 'lod';
      'Void*', 'img'};
    {'CompressedMultiTexImage3DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedMultiTexImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedMultiTexImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'TextureInternalFormat', 'internalformat';
      'SizeI', 'width';
      'CheckedInt32', 'border';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedMultiTexSubImage3DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'CheckedInt32', 'zoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'SizeI', 'depth';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedMultiTexSubImage2DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'CheckedInt32', 'yoffset';
      'SizeI', 'width';
      'SizeI', 'height';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'CompressedMultiTexSubImage1DEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'level';
      'CheckedInt32', 'xoffset';
      'SizeI', 'width';
      'PixelFormat', 'format';
      'SizeI', 'imageSize';
      'const Void*', 'bits'};
    {'GetCompressedMultiTexImageEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'CheckedInt32', 'lod';
      'Void*', 'img'};
    {'NamedProgramStringEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'ProgramFormat', 'format';
      'SizeI', 'len';
      'const Void*', 'string'};
    {'NamedProgramLocalParameter4dEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z';
      'Float64', 'w'};
    {'NamedProgramLocalParameter4dvEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'const Float64*', 'params'};
    {'NamedProgramLocalParameter4fEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z';
      'Float32', 'w'};
    {'NamedProgramLocalParameter4fvEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'const Float32*', 'params'};
    {'GetNamedProgramLocalParameterdvEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Float64*', 'params'};
    {'GetNamedProgramLocalParameterfvEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Float32*', 'params'};
    {'GetNamedProgramivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'ProgramProperty', 'pname';
      'Int32*', 'params'};
    {'GetNamedProgramStringEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'ProgramStringProperty', 'pname';
      'Void*', 'string'};
    {'NamedProgramLocalParameters4fvEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'SizeI', 'count';
      'const Float32*', 'params'};
    {'NamedProgramLocalParameterI4iEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Int32', 'x';
      'Int32', 'y';
      'Int32', 'z';
      'Int32', 'w'};
    {'NamedProgramLocalParameterI4ivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'const Int32*', 'params'};
    {'NamedProgramLocalParametersI4ivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'SizeI', 'count';
      'const Int32*', 'params'};
    {'NamedProgramLocalParameterI4uiEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'UInt32', 'x';
      'UInt32', 'y';
      'UInt32', 'z';
      'UInt32', 'w'};
    {'NamedProgramLocalParameterI4uivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'const UInt32*', 'params'};
    {'NamedProgramLocalParametersI4uivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'SizeI', 'count';
      'const UInt32*', 'params'};
    {'GetNamedProgramLocalParameterIivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'Int32*', 'params'};
    {'GetNamedProgramLocalParameterIuivEXT';
      'UInt32', 'program';
      'ProgramTarget', 'target';
      'UInt32', 'index';
      'UInt32*', 'params'};
    {'TextureParameterIivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedInt32*', 'params'};
    {'TextureParameterIuivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const UInt32*', 'params'};
    {'GetTextureParameterIivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'GetTextureParameterIuivEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'UInt32*', 'params'};
    {'MultiTexParameterIivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const CheckedInt32*', 'params'};
    {'MultiTexParameterIuivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TextureParameterName', 'pname';
      'const UInt32*', 'params'};
    {'GetMultiTexParameterIivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'Int32*', 'params'};
    {'GetMultiTexParameterIuivEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'GetTextureParameter', 'pname';
      'UInt32*', 'params'};
    {'ProgramUniform1fEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float32', 'v0'};
    {'ProgramUniform2fEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1'};
    {'ProgramUniform3fEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2'};
    {'ProgramUniform4fEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2';
      'Float32', 'v3'};
    {'ProgramUniform1iEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Int32', 'v0'};
    {'ProgramUniform2iEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1'};
    {'ProgramUniform3iEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2'};
    {'ProgramUniform4iEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2';
      'Int32', 'v3'};
    {'ProgramUniform1fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'ProgramUniform2fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'ProgramUniform3fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'ProgramUniform4fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'ProgramUniform1ivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'ProgramUniform2ivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'ProgramUniform3ivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'ProgramUniform4ivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'ProgramUniformMatrix2fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix3fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix4fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix2x3fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix3x2fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix2x4fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix4x2fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix3x4fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniformMatrix4x3fvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ProgramUniform1uiEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'UInt32', 'v0'};
    {'ProgramUniform2uiEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'UInt32', 'v0';
      'UInt32', 'v1'};
    {'ProgramUniform3uiEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'UInt32', 'v0';
      'UInt32', 'v1';
      'UInt32', 'v2'};
    {'ProgramUniform4uiEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'UInt32', 'v0';
      'UInt32', 'v1';
      'UInt32', 'v2';
      'UInt32', 'v3'};
    {'ProgramUniform1uivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const UInt32*', 'value'};
    {'ProgramUniform2uivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const UInt32*', 'value'};
    {'ProgramUniform3uivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const UInt32*', 'value'};
    {'ProgramUniform4uivEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const UInt32*', 'value'};
    {'NamedBufferDataEXT';
      'UInt32', 'buffer';
      'Sizeiptr', 'size';
      'const Void*', 'data';
      'VertexBufferObjectUsage', 'usage'};
    {'NamedBufferSubDataEXT';
      'UInt32', 'buffer';
      'Intptr', 'offset';
      'Sizeiptr', 'size';
      'const Void*', 'data'};
    {'MapNamedBufferEXT', ret='VoidPointer';
      'UInt32', 'buffer';
      'VertexBufferObjectAccess', 'access'};
    {'UnmapNamedBufferEXT', ret='Boolean';
      'UInt32', 'buffer'};
    {'MapNamedBufferRangeEXT', ret='VoidPointer';
      'UInt32', 'buffer';
      'Intptr', 'offset';
      'Sizeiptr', 'length';
      'BufferAccessMask', 'access'};
    {'FlushMappedNamedBufferRangeEXT';
      'UInt32', 'buffer';
      'Intptr', 'offset';
      'Sizeiptr', 'length'};
    {'NamedCopyBufferSubDataEXT';
      'UInt32', 'readBuffer';
      'UInt32', 'writeBuffer';
      'Intptr', 'readOffset';
      'Intptr', 'writeOffset';
      'Sizeiptr', 'size'};
    {'GetNamedBufferParameterivEXT';
      'UInt32', 'buffer';
      'VertexBufferObjectParameter', 'pname';
      'Int32*', 'params'};
    {'GetNamedBufferPointervEXT';
      'UInt32', 'buffer';
      'VertexBufferObjectParameter', 'pname';
      'VoidPointer*', 'params'};
    {'GetNamedBufferSubDataEXT';
      'UInt32', 'buffer';
      'Intptr', 'offset';
      'Sizeiptr', 'size';
      'Void*', 'data'};
    {'TextureBufferEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'TypeEnum', 'internalformat';
      'UInt32', 'buffer'};
    {'MultiTexBufferEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'TypeEnum', 'internalformat';
      'UInt32', 'buffer'};
    {'NamedRenderbufferStorageEXT';
      'Renderbuffer', 'renderbuffer';
      'PixelInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'GetNamedRenderbufferParameterivEXT';
      'Renderbuffer', 'renderbuffer';
      'RenderbufferParameterName', 'pname';
      'Int32*', 'params'};
    {'CheckNamedFramebufferStatusEXT', ret='FramebufferStatus';
      'Framebuffer', 'framebuffer';
      'FramebufferTarget', 'target'};
    {'NamedFramebufferTexture1DEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'TextureTarget', 'textarget';
      'Texture', 'texture';
      'CheckedInt32', 'level'};
    {'NamedFramebufferTexture2DEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'TextureTarget', 'textarget';
      'Texture', 'texture';
      'CheckedInt32', 'level'};
    {'NamedFramebufferTexture3DEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'TextureTarget', 'textarget';
      'Texture', 'texture';
      'CheckedInt32', 'level';
      'CheckedInt32', 'zoffset'};
    {'NamedFramebufferRenderbufferEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'RenderbufferTarget', 'renderbuffertarget';
      'Renderbuffer', 'renderbuffer'};
    {'GetNamedFramebufferAttachmentParameterivEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'FramebufferAttachmentParameterName', 'pname';
      'Int32*', 'params'};
    {'GenerateTextureMipmapEXT';
      'Texture', 'texture';
      'TextureTarget', 'target'};
    {'GenerateMultiTexMipmapEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target'};
    {'FramebufferDrawBufferEXT';
      'Framebuffer', 'framebuffer';
      'DrawBufferMode', 'mode'};
    {'FramebufferDrawBuffersEXT';
      'Framebuffer', 'framebuffer';
      'SizeI', 'n';
      'const DrawBufferMode*', 'bufs'};
    {'FramebufferReadBufferEXT';
      'Framebuffer', 'framebuffer';
      'ReadBufferMode', 'mode'};
    {'GetFramebufferParameterivEXT';
      'Framebuffer', 'framebuffer';
      'GetFramebufferParameter', 'pname';
      'Int32*', 'params'};
    {'NamedRenderbufferStorageMultisampleEXT';
      'Renderbuffer', 'renderbuffer';
      'SizeI', 'samples';
      'PixelInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'NamedRenderbufferStorageMultisampleCoverageEXT';
      'Renderbuffer', 'renderbuffer';
      'SizeI', 'coverageSamples';
      'SizeI', 'colorSamples';
      'PixelInternalFormat', 'internalformat';
      'SizeI', 'width';
      'SizeI', 'height'};
    {'NamedFramebufferTextureEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'Texture', 'texture';
      'CheckedInt32', 'level'};
    {'NamedFramebufferTextureLayerEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'Texture', 'texture';
      'CheckedInt32', 'level';
      'CheckedInt32', 'layer'};
    {'NamedFramebufferTextureFaceEXT';
      'Framebuffer', 'framebuffer';
      'FramebufferAttachment', 'attachment';
      'Texture', 'texture';
      'CheckedInt32', 'level';
      'TextureTarget', 'face'};
    {'TextureRenderbufferEXT';
      'Texture', 'texture';
      'TextureTarget', 'target';
      'UInt32', 'renderbuffer'};
    {'MultiTexRenderbufferEXT';
      'TextureUnit', 'texunit';
      'TextureTarget', 'target';
      'UInt32', 'renderbuffer'};
    {'ProgramUniform1dEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float64', 'x'};
    {'ProgramUniform2dEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y'};
    {'ProgramUniform3dEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'ProgramUniform4dEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z';
      'Float64', 'w'};
    {'ProgramUniform1dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'ProgramUniform2dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'ProgramUniform3dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'ProgramUniform4dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix2dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix3dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix4dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix2x3dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix2x4dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix3x2dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix3x4dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix4x2dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'ProgramUniformMatrix4x3dvEXT';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
  };
}
