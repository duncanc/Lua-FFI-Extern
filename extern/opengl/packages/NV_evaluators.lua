return {
  basicTypes = {
    GLenum = "unsigned int";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLsizei = "int";
    GLint = "int";
    GLboolean = "unsigned char";
    GLvoid = "void";
    GLenum = "unsigned int";
    GLfloat = "float";
    GLint = "int";
    GLfloat = "float";
    GLenum = "unsigned int";
    GLenum = "unsigned int";
  };
  typeAliases = {
    EvalTargetNV = "GLenum";
    UInt32 = "GLuint";
    MapTypeNV = "GLenum";
    SizeI = "GLsizei";
    CheckedInt32 = "GLint";
    Boolean = "GLboolean";
    Void = "GLvoid";
    MapParameterNV = "GLenum";
    CheckedFloat32 = "GLfloat";
    Int32 = "GLint";
    Float32 = "GLfloat";
    MapAttribParameterNV = "GLenum";
    EvalMapsModeNV = "GLenum";
  };
  magicNumbers = {
    EVAL_2D_NV = 0x86C0;
    EVAL_TRIANGULAR_2D_NV = 0x86C1;
    MAP_TESSELLATION_NV = 0x86C2;
    MAP_ATTRIB_U_ORDER_NV = 0x86C3;
    MAP_ATTRIB_V_ORDER_NV = 0x86C4;
    EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5;
    EVAL_VERTEX_ATTRIB0_NV = 0x86C6;
    EVAL_VERTEX_ATTRIB1_NV = 0x86C7;
    EVAL_VERTEX_ATTRIB2_NV = 0x86C8;
    EVAL_VERTEX_ATTRIB3_NV = 0x86C9;
    EVAL_VERTEX_ATTRIB4_NV = 0x86CA;
    EVAL_VERTEX_ATTRIB5_NV = 0x86CB;
    EVAL_VERTEX_ATTRIB6_NV = 0x86CC;
    EVAL_VERTEX_ATTRIB7_NV = 0x86CD;
    EVAL_VERTEX_ATTRIB8_NV = 0x86CE;
    EVAL_VERTEX_ATTRIB9_NV = 0x86CF;
    EVAL_VERTEX_ATTRIB10_NV = 0x86D0;
    EVAL_VERTEX_ATTRIB11_NV = 0x86D1;
    EVAL_VERTEX_ATTRIB12_NV = 0x86D2;
    EVAL_VERTEX_ATTRIB13_NV = 0x86D3;
    EVAL_VERTEX_ATTRIB14_NV = 0x86D4;
    EVAL_VERTEX_ATTRIB15_NV = 0x86D5;
    MAX_MAP_TESSELLATION_NV = 0x86D6;
    MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7;
  };
  funcs = {
    {'MapControlPointsNV';
      'EvalTargetNV', 'target';
      'UInt32', 'index';
      'MapTypeNV', 'type';
      'SizeI', 'ustride';
      'SizeI', 'vstride';
      'CheckedInt32', 'uorder';
      'CheckedInt32', 'vorder';
      'Boolean', 'packed';
      'const Void*', 'points'};
    {'MapParameterivNV';
      'EvalTargetNV', 'target';
      'MapParameterNV', 'pname';
      'const CheckedInt32*', 'params'};
    {'MapParameterfvNV';
      'EvalTargetNV', 'target';
      'MapParameterNV', 'pname';
      'const CheckedFloat32*', 'params'};
    {'GetMapControlPointsNV';
      'EvalTargetNV', 'target';
      'UInt32', 'index';
      'MapTypeNV', 'type';
      'SizeI', 'ustride';
      'SizeI', 'vstride';
      'Boolean', 'packed';
      'Void*', 'points'};
    {'GetMapParameterivNV';
      'EvalTargetNV', 'target';
      'MapParameterNV', 'pname';
      'Int32*', 'params'};
    {'GetMapParameterfvNV';
      'EvalTargetNV', 'target';
      'MapParameterNV', 'pname';
      'Float32*', 'params'};
    {'GetMapAttribParameterivNV';
      'EvalTargetNV', 'target';
      'UInt32', 'index';
      'MapAttribParameterNV', 'pname';
      'Int32*', 'params'};
    {'GetMapAttribParameterfvNV';
      'EvalTargetNV', 'target';
      'UInt32', 'index';
      'MapAttribParameterNV', 'pname';
      'Float32*', 'params'};
    {'EvalMapsNV';
      'EvalTargetNV', 'target';
      'EvalMapsModeNV', 'mode'};
  };
}
