return {
  basicTypes = {
    GLint = "int";
    GLbyte = "signed char";
    GLshort = "short";
    GLfloat = "float";
    GLdouble = "double";
    GLubyte = "unsigned char";
    GLushort = "unsigned short";
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLsizei = "int";
    GLvoid = "void";
  };
  typeAliases = {
    Int32 = "GLint";
    Int8 = "GLbyte";
    Int16 = "GLshort";
    Float32 = "GLfloat";
    Float64 = "GLdouble";
    UInt8 = "GLubyte";
    UInt16 = "GLushort";
    UInt32 = "GLuint";
    WeightPointerTypeARB = "GLenum";
    SizeI = "GLsizei";
    Void = "GLvoid";
  };
  magicNumbers = {
    MAX_VERTEX_UNITS_ARB = 0x86A4;
    ACTIVE_VERTEX_UNITS_ARB = 0x86A5;
    WEIGHT_SUM_UNITY_ARB = 0x86A6;
    VERTEX_BLEND_ARB = 0x86A7;
    CURRENT_WEIGHT_ARB = 0x86A8;
    WEIGHT_ARRAY_TYPE_ARB = 0x86A9;
    WEIGHT_ARRAY_STRIDE_ARB = 0x86AA;
    WEIGHT_ARRAY_SIZE_ARB = 0x86AB;
    WEIGHT_ARRAY_POINTER_ARB = 0x86AC;
    WEIGHT_ARRAY_ARB = 0x86AD;
    MODELVIEW0_ARB = 0x1700;
    MODELVIEW1_ARB = 0x850A;
    MODELVIEW2_ARB = 0x8722;
    MODELVIEW3_ARB = 0x8723;
    MODELVIEW4_ARB = 0x8724;
    MODELVIEW5_ARB = 0x8725;
    MODELVIEW6_ARB = 0x8726;
    MODELVIEW7_ARB = 0x8727;
    MODELVIEW8_ARB = 0x8728;
    MODELVIEW9_ARB = 0x8729;
    MODELVIEW10_ARB = 0x872A;
    MODELVIEW11_ARB = 0x872B;
    MODELVIEW12_ARB = 0x872C;
    MODELVIEW13_ARB = 0x872D;
    MODELVIEW14_ARB = 0x872E;
    MODELVIEW15_ARB = 0x872F;
    MODELVIEW16_ARB = 0x8730;
    MODELVIEW17_ARB = 0x8731;
    MODELVIEW18_ARB = 0x8732;
    MODELVIEW19_ARB = 0x8733;
    MODELVIEW20_ARB = 0x8734;
    MODELVIEW21_ARB = 0x8735;
    MODELVIEW22_ARB = 0x8736;
    MODELVIEW23_ARB = 0x8737;
    MODELVIEW24_ARB = 0x8738;
    MODELVIEW25_ARB = 0x8739;
    MODELVIEW26_ARB = 0x873A;
    MODELVIEW27_ARB = 0x873B;
    MODELVIEW28_ARB = 0x873C;
    MODELVIEW29_ARB = 0x873D;
    MODELVIEW30_ARB = 0x873E;
    MODELVIEW31_ARB = 0x873F;
  };
  funcs = {
    {'WeightbvARB';
      'Int32', 'size';
      'const Int8*', 'weights'};
    {'WeightsvARB';
      'Int32', 'size';
      'const Int16*', 'weights'};
    {'WeightivARB';
      'Int32', 'size';
      'const Int32*', 'weights'};
    {'WeightfvARB';
      'Int32', 'size';
      'const Float32*', 'weights'};
    {'WeightdvARB';
      'Int32', 'size';
      'const Float64*', 'weights'};
    {'WeightubvARB';
      'Int32', 'size';
      'const UInt8*', 'weights'};
    {'WeightusvARB';
      'Int32', 'size';
      'const UInt16*', 'weights'};
    {'WeightuivARB';
      'Int32', 'size';
      'const UInt32*', 'weights'};
    {'WeightPointerARB';
      'Int32', 'size';
      'WeightPointerTypeARB', 'type';
      'SizeI', 'stride';
      'const Void*', 'pointer'};
    {'VertexBlendARB';
      'Int32', 'count'};
  };
}
