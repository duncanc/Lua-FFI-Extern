return {
  basicTypes = {
    GLint = "int";
    GLdouble = "double";
    GLsizei = "int";
    GLboolean = "unsigned char";
    GLuint = "unsigned int";
  };
  typeAliases = {
    Int32 = "GLint";
    Float64 = "GLdouble";
    SizeI = "GLsizei";
    Boolean = "GLboolean";
    UInt32 = "GLuint";
  };
  magicNumbers = {
    DOUBLE = 0x140A;
    DOUBLE_VEC2 = 0x8FFC;
    DOUBLE_VEC3 = 0x8FFD;
    DOUBLE_VEC4 = 0x8FFE;
    DOUBLE_MAT2 = 0x8F46;
    DOUBLE_MAT3 = 0x8F47;
    DOUBLE_MAT4 = 0x8F48;
    DOUBLE_MAT2x3 = 0x8F49;
    DOUBLE_MAT2x4 = 0x8F4A;
    DOUBLE_MAT3x2 = 0x8F4B;
    DOUBLE_MAT3x4 = 0x8F4C;
    DOUBLE_MAT4x2 = 0x8F4D;
    DOUBLE_MAT4x3 = 0x8F4E;
  };
  funcs = {
    {'Uniform1d';
      'Int32', 'location';
      'Float64', 'x'};
    {'Uniform2d';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y'};
    {'Uniform3d';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'Uniform4d';
      'Int32', 'location';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z';
      'Float64', 'w'};
    {'Uniform1dv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'Uniform2dv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'Uniform3dv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'Uniform4dv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float64*', 'value'};
    {'UniformMatrix2dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix3dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix4dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix2x3dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix2x4dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix3x2dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix3x4dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix4x2dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'UniformMatrix4x3dv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float64*', 'value'};
    {'GetUniformdv';
      'UInt32', 'program';
      'Int32', 'location';
      'Float64*', 'params'};
  };
}
