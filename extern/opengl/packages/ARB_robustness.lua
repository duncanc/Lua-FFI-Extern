return {
  basicTypes = {
    GLenum = "unsigned int";
    GLsizei = "int";
    GLdouble = "double";
    GLfloat = "float";
    GLint = "int";
    GLuint = "unsigned int";
    GLushort = "unsigned short";
    GLubyte = "unsigned char";
    GLvoid = "void";
    GLboolean = "unsigned char";
  };
  magicNumbers = {
    NO_ERROR = 0;
    CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004;
    LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
    GUILTY_CONTEXT_RESET_ARB = 0x8253;
    INNOCENT_CONTEXT_RESET_ARB = 0x8254;
    UNKNOWN_CONTEXT_RESET_ARB = 0x8255;
    RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
    NO_RESET_NOTIFICATION_ARB = 0x8261;
  };
  funcs = {
    {'GetGraphicsResetStatusARB', ret='GLenum'};
    {'GetnMapdvARB';
      'GLenum', 'target';
      'GLenum', 'query';
      'SizeI', 'bufSize';
      'Float64*', 'v'};
    {'GetnMapfvARB';
      'GLenum', 'target';
      'GLenum', 'query';
      'SizeI', 'bufSize';
      'Float32*', 'v'};
    {'GetnMapivARB';
      'GLenum', 'target';
      'GLenum', 'query';
      'SizeI', 'bufSize';
      'Int32*', 'v'};
    {'GetnPixelMapfvARB';
      'GLenum', 'map';
      'SizeI', 'bufSize';
      'Float32*', 'values'};
    {'GetnPixelMapuivARB';
      'GLenum', 'map';
      'SizeI', 'bufSize';
      'UInt32*', 'values'};
    {'GetnPixelMapusvARB';
      'GLenum', 'map';
      'SizeI', 'bufSize';
      'UInt16*', 'values'};
    {'GetnPolygonStippleARB';
      'SizeI', 'bufSize';
      'UInt8*', 'pattern'};
    {'GetnColorTableARB';
      'GLenum', 'target';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'table'};
    {'GetnConvolutionFilterARB';
      'GLenum', 'target';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'image'};
    {'GetnSeparableFilterARB';
      'GLenum', 'target';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'rowBufSize';
      'Void*', 'row';
      'SizeI', 'columnBufSize';
      'Void*', 'column';
      'Void*', 'span'};
    {'GetnHistogramARB';
      'GLenum', 'target';
      'Boolean', 'reset';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'values'};
    {'GetnMinmaxARB';
      'GLenum', 'target';
      'Boolean', 'reset';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'values'};
    {'GetnTexImageARB';
      'GLenum', 'target';
      'Int32', 'level';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'img'};
    {'ReadnPixelsARB';
      'Int32', 'x';
      'Int32', 'y';
      'SizeI', 'width';
      'SizeI', 'height';
      'GLenum', 'format';
      'GLenum', 'type';
      'SizeI', 'bufSize';
      'Void*', 'data'};
    {'GetnCompressedTexImageARB';
      'GLenum', 'target';
      'Int32', 'lod';
      'SizeI', 'bufSize';
      'Void*', 'img'};
    {'GetnUniformfvARB';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'bufSize';
      'Float32*', 'params'};
    {'GetnUniformivARB';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'bufSize';
      'Int32*', 'params'};
    {'GetnUniformuivARB';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'bufSize';
      'UInt32*', 'params'};
    {'GetnUniformdvARB';
      'UInt32', 'program';
      'Int32', 'location';
      'SizeI', 'bufSize';
      'Float64*', 'params'};
  };
}
