return {
  inherits = {
    require 'extern.opengl.packages.VERSION_1_5';
  };
  basicTypes = {
    GLchar = "char";
  };
  typeAliases = {
    BlendEquationModeEXT = "GLenum";
    Char = "GLchar";
    CharPointer = "GLchar*";
    StencilFaceDirection = "GLenum";
    VertexAttribPointerPropertyARB = "GLenum";
    VertexAttribPointerTypeARB = "GLenum";
    VertexAttribPropertyARB = "GLenum";
    DrawBufferModeATI = "GLenum";
  };
  magicNumbers = {
    BLEND_EQUATION_RGB = 0x8009;
    VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
    VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
    VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
    VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
    CURRENT_VERTEX_ATTRIB = 0x8626;
    VERTEX_PROGRAM_POINT_SIZE = 0x8642;
    VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
    STENCIL_BACK_FUNC = 0x8800;
    STENCIL_BACK_FAIL = 0x8801;
    STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
    STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
    MAX_DRAW_BUFFERS = 0x8824;
    DRAW_BUFFER0 = 0x8825;
    DRAW_BUFFER1 = 0x8826;
    DRAW_BUFFER2 = 0x8827;
    DRAW_BUFFER3 = 0x8828;
    DRAW_BUFFER4 = 0x8829;
    DRAW_BUFFER5 = 0x882A;
    DRAW_BUFFER6 = 0x882B;
    DRAW_BUFFER7 = 0x882C;
    DRAW_BUFFER8 = 0x882D;
    DRAW_BUFFER9 = 0x882E;
    DRAW_BUFFER10 = 0x882F;
    DRAW_BUFFER11 = 0x8830;
    DRAW_BUFFER12 = 0x8831;
    DRAW_BUFFER13 = 0x8832;
    DRAW_BUFFER14 = 0x8833;
    DRAW_BUFFER15 = 0x8834;
    BLEND_EQUATION_ALPHA = 0x883D;
    MAX_VERTEX_ATTRIBS = 0x8869;
    VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
    MAX_TEXTURE_IMAGE_UNITS = 0x8872;
    FRAGMENT_SHADER = 0x8B30;
    VERTEX_SHADER = 0x8B31;
    MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
    MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
    MAX_VARYING_FLOATS = 0x8B4B;
    MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
    MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
    SHADER_TYPE = 0x8B4F;
    FLOAT_VEC2 = 0x8B50;
    FLOAT_VEC3 = 0x8B51;
    FLOAT_VEC4 = 0x8B52;
    INT_VEC2 = 0x8B53;
    INT_VEC3 = 0x8B54;
    INT_VEC4 = 0x8B55;
    BOOL = 0x8B56;
    BOOL_VEC2 = 0x8B57;
    BOOL_VEC3 = 0x8B58;
    BOOL_VEC4 = 0x8B59;
    FLOAT_MAT2 = 0x8B5A;
    FLOAT_MAT3 = 0x8B5B;
    FLOAT_MAT4 = 0x8B5C;
    SAMPLER_1D = 0x8B5D;
    SAMPLER_2D = 0x8B5E;
    SAMPLER_3D = 0x8B5F;
    SAMPLER_CUBE = 0x8B60;
    SAMPLER_1D_SHADOW = 0x8B61;
    SAMPLER_2D_SHADOW = 0x8B62;
    DELETE_STATUS = 0x8B80;
    COMPILE_STATUS = 0x8B81;
    LINK_STATUS = 0x8B82;
    VALIDATE_STATUS = 0x8B83;
    INFO_LOG_LENGTH = 0x8B84;
    ATTACHED_SHADERS = 0x8B85;
    ACTIVE_UNIFORMS = 0x8B86;
    ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
    SHADER_SOURCE_LENGTH = 0x8B88;
    ACTIVE_ATTRIBUTES = 0x8B89;
    ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
    SHADING_LANGUAGE_VERSION = 0x8B8C;
    CURRENT_PROGRAM = 0x8B8D;
    POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
    LOWER_LEFT = 0x8CA1;
    UPPER_LEFT = 0x8CA2;
    STENCIL_BACK_REF = 0x8CA3;
    STENCIL_BACK_VALUE_MASK = 0x8CA4;
    STENCIL_BACK_WRITEMASK = 0x8CA5;
    VERTEX_PROGRAM_TWO_SIDE = 0x8643;
    POINT_SPRITE = 0x8861;
    COORD_REPLACE = 0x8862;
    MAX_TEXTURE_COORDS = 0x8871;
  };
  funcs = {
    {'BlendEquationSeparate';
      'BlendEquationModeEXT', 'modeRGB';
      'BlendEquationModeEXT', 'modeAlpha'};
    {'DrawBuffers';
      'SizeI', 'n';
      'const DrawBufferModeATI*', 'bufs'};
    {'StencilOpSeparate';
      'StencilFaceDirection', 'face';
      'StencilOp', 'sfail';
      'StencilOp', 'dpfail';
      'StencilOp', 'dppass'};
    {'StencilFuncSeparate';
      'StencilFaceDirection', 'face';
      'StencilFunction', 'func';
      'ClampedStencilValue', 'ref';
      'MaskedStencilValue', 'mask'};
    {'StencilMaskSeparate';
      'StencilFaceDirection', 'face';
      'MaskedStencilValue', 'mask'};
    {'AttachShader';
      'UInt32', 'program';
      'UInt32', 'shader'};
    {'BindAttribLocation';
      'UInt32', 'program';
      'UInt32', 'index';
      'const Char*', 'name'};
    {'CompileShader';
      'UInt32', 'shader'};
    {'CreateProgram', ret='UInt32'};
    {'CreateShader', ret='UInt32';
      'GLenum', 'type'};
    {'DeleteProgram';
      'UInt32', 'program'};
    {'DeleteShader';
      'UInt32', 'shader'};
    {'DetachShader';
      'UInt32', 'program';
      'UInt32', 'shader'};
    {'DisableVertexAttribArray';
      'UInt32', 'index'};
    {'EnableVertexAttribArray';
      'UInt32', 'index'};
    {'GetActiveAttrib';
      'UInt32', 'program';
      'UInt32', 'index';
      'SizeI', 'bufSize';
      'SizeI*', 'length';
      'Int32*', 'size';
      'GLenum*', 'type';
      'Char*', 'name'};
    {'GetActiveUniform';
      'UInt32', 'program';
      'UInt32', 'index';
      'SizeI', 'bufSize';
      'SizeI*', 'length';
      'Int32*', 'size';
      'GLenum*', 'type';
      'Char*', 'name'};
    {'GetAttachedShaders';
      'UInt32', 'program';
      'SizeI', 'maxCount';
      'SizeI*', 'count';
      'UInt32*', 'obj'};
    {'GetAttribLocation', ret='Int32';
      'UInt32', 'program';
      'const Char*', 'name'};
    {'GetProgramiv';
      'UInt32', 'program';
      'GLenum', 'pname';
      'Int32*', 'params'};
    {'GetProgramInfoLog';
      'UInt32', 'program';
      'SizeI', 'bufSize';
      'SizeI*', 'length';
      'Char*', 'infoLog'};
    {'GetShaderiv';
      'UInt32', 'shader';
      'GLenum', 'pname';
      'Int32*', 'params'};
    {'GetShaderInfoLog';
      'UInt32', 'shader';
      'SizeI', 'bufSize';
      'SizeI*', 'length';
      'Char*', 'infoLog'};
    {'GetShaderSource';
      'UInt32', 'shader';
      'SizeI', 'bufSize';
      'SizeI*', 'length';
      'Char*', 'source'};
    {'GetUniformLocation', ret='Int32';
      'UInt32', 'program';
      'const Char*', 'name'};
    {'GetUniformfv';
      'UInt32', 'program';
      'Int32', 'location';
      'Float32*', 'params'};
    {'GetUniformiv';
      'UInt32', 'program';
      'Int32', 'location';
      'Int32*', 'params'};
    {'GetVertexAttribdv';
      'UInt32', 'index';
      'VertexAttribPropertyARB', 'pname';
      'Float64*', 'params'};
    {'GetVertexAttribfv';
      'UInt32', 'index';
      'VertexAttribPropertyARB', 'pname';
      'Float32*', 'params'};
    {'GetVertexAttribiv';
      'UInt32', 'index';
      'VertexAttribPropertyARB', 'pname';
      'Int32*', 'params'};
    {'GetVertexAttribPointerv';
      'UInt32', 'index';
      'VertexAttribPointerPropertyARB', 'pname';
      'VoidPointer*', 'pointer'};
    {'IsProgram', ret='Boolean';
      'UInt32', 'program'};
    {'IsShader', ret='Boolean';
      'UInt32', 'shader'};
    {'LinkProgram';
      'UInt32', 'program'};
    {'ShaderSource';
      'UInt32', 'shader';
      'SizeI', 'count';
      'const CharPointer*', 'string';
      'const Int32*', 'length'};
    {'UseProgram';
      'UInt32', 'program'};
    {'Uniform1f';
      'Int32', 'location';
      'Float32', 'v0'};
    {'Uniform2f';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1'};
    {'Uniform3f';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2'};
    {'Uniform4f';
      'Int32', 'location';
      'Float32', 'v0';
      'Float32', 'v1';
      'Float32', 'v2';
      'Float32', 'v3'};
    {'Uniform1i';
      'Int32', 'location';
      'Int32', 'v0'};
    {'Uniform2i';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1'};
    {'Uniform3i';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2'};
    {'Uniform4i';
      'Int32', 'location';
      'Int32', 'v0';
      'Int32', 'v1';
      'Int32', 'v2';
      'Int32', 'v3'};
    {'Uniform1fv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform2fv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform3fv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform4fv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Float32*', 'value'};
    {'Uniform1iv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform2iv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform3iv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'Uniform4iv';
      'Int32', 'location';
      'SizeI', 'count';
      'const Int32*', 'value'};
    {'UniformMatrix2fv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'UniformMatrix3fv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'UniformMatrix4fv';
      'Int32', 'location';
      'SizeI', 'count';
      'Boolean', 'transpose';
      'const Float32*', 'value'};
    {'ValidateProgram';
      'UInt32', 'program'};
    {'VertexAttrib1d', deprecated='3.1';
      'UInt32', 'index';
      'Float64', 'x'};
    {'VertexAttrib1dv', deprecated='3.1';
      'UInt32', 'index';
      'const Float64*', 'v'};
    {'VertexAttrib1f', deprecated='3.1';
      'UInt32', 'index';
      'Float32', 'x'};
    {'VertexAttrib1fv', deprecated='3.1';
      'UInt32', 'index';
      'const Float32*', 'v'};
    {'VertexAttrib1s', deprecated='3.1';
      'UInt32', 'index';
      'Int16', 'x'};
    {'VertexAttrib1sv', deprecated='3.1';
      'UInt32', 'index';
      'const Int16*', 'v'};
    {'VertexAttrib2d', deprecated='3.1';
      'UInt32', 'index';
      'Float64', 'x';
      'Float64', 'y'};
    {'VertexAttrib2dv', deprecated='3.1';
      'UInt32', 'index';
      'const Float64*', 'v'};
    {'VertexAttrib2f', deprecated='3.1';
      'UInt32', 'index';
      'Float32', 'x';
      'Float32', 'y'};
    {'VertexAttrib2fv', deprecated='3.1';
      'UInt32', 'index';
      'const Float32*', 'v'};
    {'VertexAttrib2s', deprecated='3.1';
      'UInt32', 'index';
      'Int16', 'x';
      'Int16', 'y'};
    {'VertexAttrib2sv', deprecated='3.1';
      'UInt32', 'index';
      'const Int16*', 'v'};
    {'VertexAttrib3d', deprecated='3.1';
      'UInt32', 'index';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z'};
    {'VertexAttrib3dv', deprecated='3.1';
      'UInt32', 'index';
      'const Float64*', 'v'};
    {'VertexAttrib3f', deprecated='3.1';
      'UInt32', 'index';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z'};
    {'VertexAttrib3fv', deprecated='3.1';
      'UInt32', 'index';
      'const Float32*', 'v'};
    {'VertexAttrib3s', deprecated='3.1';
      'UInt32', 'index';
      'Int16', 'x';
      'Int16', 'y';
      'Int16', 'z'};
    {'VertexAttrib3sv', deprecated='3.1';
      'UInt32', 'index';
      'const Int16*', 'v'};
    {'VertexAttrib4Nbv', deprecated='3.1';
      'UInt32', 'index';
      'const Int8*', 'v'};
    {'VertexAttrib4Niv', deprecated='3.1';
      'UInt32', 'index';
      'const Int32*', 'v'};
    {'VertexAttrib4Nsv', deprecated='3.1';
      'UInt32', 'index';
      'const Int16*', 'v'};
    {'VertexAttrib4Nub', deprecated='3.1';
      'UInt32', 'index';
      'UInt8', 'x';
      'UInt8', 'y';
      'UInt8', 'z';
      'UInt8', 'w'};
    {'VertexAttrib4Nubv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt8*', 'v'};
    {'VertexAttrib4Nuiv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt32*', 'v'};
    {'VertexAttrib4Nusv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt16*', 'v'};
    {'VertexAttrib4bv', deprecated='3.1';
      'UInt32', 'index';
      'const Int8*', 'v'};
    {'VertexAttrib4d', deprecated='3.1';
      'UInt32', 'index';
      'Float64', 'x';
      'Float64', 'y';
      'Float64', 'z';
      'Float64', 'w'};
    {'VertexAttrib4dv', deprecated='3.1';
      'UInt32', 'index';
      'const Float64*', 'v'};
    {'VertexAttrib4f', deprecated='3.1';
      'UInt32', 'index';
      'Float32', 'x';
      'Float32', 'y';
      'Float32', 'z';
      'Float32', 'w'};
    {'VertexAttrib4fv', deprecated='3.1';
      'UInt32', 'index';
      'const Float32*', 'v'};
    {'VertexAttrib4iv', deprecated='3.1';
      'UInt32', 'index';
      'const Int32*', 'v'};
    {'VertexAttrib4s', deprecated='3.1';
      'UInt32', 'index';
      'Int16', 'x';
      'Int16', 'y';
      'Int16', 'z';
      'Int16', 'w'};
    {'VertexAttrib4sv', deprecated='3.1';
      'UInt32', 'index';
      'const Int16*', 'v'};
    {'VertexAttrib4ubv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt8*', 'v'};
    {'VertexAttrib4uiv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt32*', 'v'};
    {'VertexAttrib4usv', deprecated='3.1';
      'UInt32', 'index';
      'const UInt16*', 'v'};
    {'VertexAttribPointer';
      'UInt32', 'index';
      'Int32', 'size';
      'VertexAttribPointerTypeARB', 'type';
      'Boolean', 'normalized';
      'SizeI', 'stride';
      'const Void*', 'pointer'};
  };
}
