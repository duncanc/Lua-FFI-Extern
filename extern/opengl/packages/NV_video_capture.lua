return {
  basicTypes = {
    GLuint = "unsigned int";
    GLenum = "unsigned int";
    GLintptrARB = "ptrdiff_t";
    GLint = "int";
    GLfloat = "float";
    GLdouble = "double";
    GLuint64EXT = "uint64_t";
  };
  typeAliases = {
    UInt32 = "GLuint";
    BufferOffsetARB = "GLintptrARB";
    Int32 = "GLint";
    Float32 = "GLfloat";
    Float64 = "GLdouble";
    UInt64EXT = "GLuint64EXT";
  };
  magicNumbers = {
    VIDEO_BUFFER_NV = 0x9020;
    VIDEO_BUFFER_BINDING_NV = 0x9021;
    FIELD_UPPER_NV = 0x9022;
    FIELD_LOWER_NV = 0x9023;
    NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024;
    NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025;
    VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026;
    LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027;
    VIDEO_BUFFER_PITCH_NV = 0x9028;
    VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029;
    VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A;
    VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B;
    VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C;
    VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D;
    PARTIAL_SUCCESS_NV = 0x902E;
    SUCCESS_NV = 0x902F;
    FAILURE_NV = 0x9030;
    YCBYCR8_422_NV = 0x9031;
    YCBAYCR8A_4224_NV = 0x9032;
    Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033;
    Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034;
    Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035;
    Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036;
    Z4Y12Z4CB12Z4CR12_444_NV = 0x9037;
    VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038;
    VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039;
    VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A;
    VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B;
    VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C;
  };
  funcs = {
    {'BeginVideoCaptureNV';
      'UInt32', 'video_capture_slot'};
    {'BindVideoCaptureStreamBufferNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'frame_region';
      'BufferOffsetARB', 'offset'};
    {'BindVideoCaptureStreamTextureNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'frame_region';
      'GLenum', 'target';
      'UInt32', 'texture'};
    {'EndVideoCaptureNV';
      'UInt32', 'video_capture_slot'};
    {'GetVideoCaptureivNV';
      'UInt32', 'video_capture_slot';
      'GLenum', 'pname';
      'Int32*', 'params'};
    {'GetVideoCaptureStreamivNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'Int32*', 'params'};
    {'GetVideoCaptureStreamfvNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'Float32*', 'params'};
    {'GetVideoCaptureStreamdvNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'Float64*', 'params'};
    {'VideoCaptureNV', ret='GLenum';
      'UInt32', 'video_capture_slot';
      'UInt32', 'sequence_num';
      'UInt64EXT', 'capture_time'};
    {'VideoCaptureStreamParameterivNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'const Int32*', 'params'};
    {'VideoCaptureStreamParameterfvNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'const Float32*', 'params'};
    {'VideoCaptureStreamParameterdvNV';
      'UInt32', 'video_capture_slot';
      'UInt32', 'stream';
      'GLenum', 'pname';
      'const Float64*', 'params'};
  };
}
